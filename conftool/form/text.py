from dataclasses import dataclass

@dataclass
class Text:
    # Question description
    desc: str
    # Question prompt
    prom: str

t_integration_name = Text(
    desc = "Identifier used in logs generated by the exporter. Default `com.newrelic.labs.sfdc.eventlogfiles`",
    prom = "Integration name?"
)

t_run_as_service = Text(
    desc = """Enable the built-in scheduler.
If set to Yes, the integration will run continuously as a service and self-schedule executions.
If set to No, the integration will run once and finish, so scheduling must be done externally.
Default `N`.""",
    prom = "Run as a service (y/n)?"
)

t_cron_interval = Text(
    desc = "The execution interval (in minutes) used by the external scheduler. Default 60.",
    prom = "Cron interval (1-10000)?"
)

t_service_scheduler_hours = Text(
    desc = "Service schedule configuration: hours. Either '*' or comma separated hours (0-23) when the integration must fire.",
    prom = "Hours?"
)

t_service_scheduler_mins = Text(
    desc="Service schedule configuration: minutes. Either '*' or comma separated minutes (0-59) when the integration must fire.",
    prom="Minutes?"
)

t_num_instances = Text(
    desc = "The exporter can run one or more exports each time it is invoked. Each export is an `instance`.",
    prom = "How many instances do you want to set up (1-10)?"
)

t_instance_name = Text(
    desc = "A symbolic name for the instance.",
    prom = "Instance name?"
)

t_token_url = Text(
    desc = "The Salesforce URL to use for token-based authentication.",
    prom = "Token URL?"
)

t_api_ver = Text(
    desc = "The version of the Salesforce API to use.",
    prom = "API version?"
)

t_conf_auth = Text(
    desc = "The authentication configuration. If not configured, it will be read from environment variables.",
    prom = "Do you want to set up authentication (y/n)?"
)
